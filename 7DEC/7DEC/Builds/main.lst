   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
 119               	.global	initIO
 121               	initIO:
   1:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** #include <stdio.h>
   2:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** #include <avr/io.h>
   3:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** #include <avr/interrupt.h>
   4:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** #include <util/delay.h>
   5:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** #include <avr/power.h>
   6:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** #include <SBIT.H>
   7:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** 
   8:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** #define LEDG            SBIT( PORTA, 3 )   //macro to write to the register for LED-Green
   9:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** #define LEDR            SBIT( PORTA, 2 )    //macro for LED-Red
  10:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** #define PWM             SBIT( DDRA,  6 )   //macro to set the data direction register for the pin P
  11:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** #define SWITCH            SBIT( PINA, 1 )   //macro to read the switch pin
  12:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** 
  13:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** 
  14:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** void pwm(int input);
  15:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** 
  16:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** 
  17:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** 
  18:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** void initIO(void) {
 123               	.LM0:
 124               	.LFBB1:
 125               	/* prologue: function */
 126               	/* frame size = 0 */
 127               	/* stack size = 0 */
 128               	.L__stack_usage = 0
  19:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** /*       PDIP/SOIC Pinout:
  20:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****                                 VCC|1 14|GND
  21:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****             (PCINT8/XTAL1/CLKI) PB0|2 13|PA0 (ADC0/AREF/PCINT0)
  22:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****                  (PCINT9/XTAL2) PB1|3 12|PA1 (ADC1/AIN0/PCINT1)
  23:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****              (PCINT11/RESET/dW) PB3|4 11|PA2 (ADC2/AIN1/PCINT2)
  24:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****       (PCINT10/INT0/OC0A/CKOUT) PB2|5 10|PA3 (ADC3/T0/PCINT3)
  25:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****          (PCINT7/ICP/OC0B/ADC7) PA7|6  9|PA4 (ADC4/USCK/SCL/T1/PCINT4)
  26:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****  (PCINT6/OC1A/SDA/MOSI/DI/ADC6) PA6|7  8|PA5 (ADC5/DO/MISO/OC1B/PCINT5)
  27:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** */
  28:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     
  29:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****  //Initial setup:
  30:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     
  31:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****  // MCUCR = 0x40; // Uncomment to disable internal pull ups
  32:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     DDRA =  0b11111101; //Port A data direction register [DDA7:DDA0] (0=input 1=output)  (all outpu
 130               	.LM1:
 131 0000 8DEF      		ldi r24,lo8(-3)
 132 0002 8ABB      		out 0x1a,r24
  33:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     DDRB =  0xFF; //Port B data direction register [DDB3:DDB0] (0=input 1=output) (set all portB pi
 134               	.LM2:
 135 0004 8FEF      		ldi r24,lo8(-1)
 136 0006 87BB      		out 0x17,r24
  34:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     PORTA = 0x00; //Port A data register [PORTA7:PORTA0]   (initialize all bits to zero)
 138               	.LM3:
 139 0008 1BBA      		out 0x1b,__zero_reg__
  35:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     PORTB = 0x00; //Port B data register [PORTA3:PORTB0]
 141               	.LM4:
 142 000a 18BA      		out 0x18,__zero_reg__
  36:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     
  37:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     
  38:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** //PWM SETUP
  39:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     
  40:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     
  41:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     //Frequency in khz
  42:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     
  43:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     OSCCAL = 0x7F; // set internal oscilator frequency. The two values overlap, ie. 0x7F > 0x80
 144               	.LM5:
 145 000c 8FE7      		ldi r24,lo8(127)
 146 000e 81BF      		out 0x31,r24
 147               	.LBB12:
 148               	.LBB13:
 150               	.Ltext1:
   1:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** /* Copyright (c) 2006, 2007, 2008  Eric B. Weddington
   2:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****    Copyright (c) 2011 Frédéric Nadeau
   3:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****    All rights reserved.
   4:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
   5:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
   8:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****    * Redistributions in binary form must reproduce the above copyright
  11:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****      notice, this list of conditions and the following disclaimer in
  12:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****      the documentation and/or other materials provided with the
  13:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****      distribution.
  14:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****    * Neither the name of the copyright holders nor the names of
  15:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****      contributors may be used to endorse or promote products derived
  16:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****      from this software without specific prior written permission.
  17:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
  18:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  19:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  20:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  21:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  22:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  23:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  24:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  25:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  26:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  27:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  28:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   POSSIBILITY OF SUCH DAMAGE. */
  29:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
  30:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** /* $Id: power.h 2422 2014-04-29 10:33:23Z pitchumani $ */
  31:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
  32:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #ifndef _AVR_POWER_H_
  33:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define _AVR_POWER_H_   1
  34:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
  35:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #include <avr/io.h>
  36:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #include <stdint.h>
  37:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
  38:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
  39:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** /** \file */
  40:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** /** \defgroup avr_power <avr/power.h>: Power Reduction Management
  41:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
  42:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** \code #include <avr/power.h>\endcode
  43:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
  44:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** Many AVRs contain a Power Reduction Register (PRR) or Registers (PRRx) that 
  45:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** allow you to reduce power consumption by disabling or enabling various on-board 
  46:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** peripherals as needed. Some devices have the XTAL Divide Control Register
  47:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** (XDIV) which offer similar functionality as System Clock Prescale
  48:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** Register (CLKPR).
  49:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
  50:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** There are many macros in this header file that provide an easy interface
  51:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** to enable or disable on-board peripherals to reduce power. See the table below.
  52:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
  53:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** \note Not all AVR devices have a Power Reduction Register (for example
  54:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** the ATmega8). On those devices without a Power Reduction Register, the
  55:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** power reduction macros are not available..
  56:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
  57:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** \note Not all AVR devices contain the same peripherals (for example, the LCD
  58:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** interface), or they will be named differently (for example, USART and 
  59:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** USART0). Please consult your device's datasheet, or the header file, to 
  60:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** find out which macros are applicable to your device.
  61:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
  62:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** \note For device using the XTAL Divide Control Register (XDIV), when prescaler
  63:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** is used, Timer/Counter0 can only be used in asynchronous mode. Keep in mind
  64:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** that Timer/Counter0 source shall be less than ¼th of peripheral clock.
  65:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** Therefore, when using a typical 32.768 kHz crystal, one shall not scale
  66:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** the clock below 131.072 kHz.
  67:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
  68:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** */
  69:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
  70:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
  71:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** /** \addtogroup avr_power
  72:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
  73:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** \anchor avr_powermacros
  74:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** <small>
  75:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** <center>
  76:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** <table border="3">
  77:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
  78:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td width="10%"><strong>Power Macro</strong></td>
  79:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td width="15%"><strong>Description</strong></td>
  80:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td width="75%"><strong>Applicable for device</strong></td>
  81:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
  82:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
  83:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
  84:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_aca_disable()</td>
  85:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the Analog Comparator on PortA.</td>
  86:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
  87:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
  88:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
  89:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
  90:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_aca_enable()</td>
  91:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the Analog Comparator on PortA.</td>
  92:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
  93:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
  94:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
  95:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
  96:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_adc_enable()</td>
  97:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the Analog to Digital Converter module.</td>
  98:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega1284, ATmega128RFA1, ATmega2560, ATmega2561, AT90U
  99:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 100:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 101:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 102:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_adc_disable()</td>
 103:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the Analog to Digital Converter module.</td>
 104:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega1284, ATmega128RFA1, ATmega2560, ATmega2561, AT90U
 105:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 106:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 107:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 108:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_adca_disable()</td>
 109:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the Analog to Digital Converter module on PortA</td>
 110:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 111:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 112:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 113:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 114:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_adca_enable()</td>
 115:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the Analog to Digital Converter module on PortA</td>
 116:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 117:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 118:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 119:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 120:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_evsys_disable()</td>
 121:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the EVSYS module</td>
 122:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 123:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 124:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 125:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 126:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_evsys_enable()</td>
 127:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the EVSYS module</td>
 128:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 129:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 130:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 131:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 132:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_hiresc_disable()</td>
 133:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the HIRES module on PortC</td>
 134:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 135:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 136:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 137:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 138:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_hiresc_enable()</td>
 139:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the HIRES module on PortC</td>
 140:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 141:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 142:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 143:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****    <tr>
 144:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_lcd_enable()</td>
 145:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the LCD module.</td>
 146:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega169, ATmega169P, ATmega329, ATmega329A, ATmega3290, ATmega3290A, ATmega649, ATmega649
 147:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 148:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 149:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 150:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_lcd_disable().</td>
 151:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the LCD module.</td>
 152:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega169, ATmega169P, ATmega329, ATmega329A, ATmega3290, ATmega3290A, ATmega649, ATmega649
 153:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 154:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 155:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 156:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_pga_enable()</td>
 157:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the Programmable Gain Amplifier module.</td>
 158:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td> ATmega256RFR2, ATmega2564RFR2, ATmega128RFR2, ATmega1284RFR2, ATmega64RFR2, ATmega644RFR2<
 159:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 160:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 161:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 162:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_pga_disable()</td>
 163:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the Programmable Gain Amplifier module.</td>
 164:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td> ATmega256RFR2, ATmega2564RFR2, ATmega128RFR2, ATmega1284RFR2, ATmega64RFR2, ATmega644RFR2<
 165:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 166:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   
 167:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 168:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_pscr_enable()</td>
 169:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the Reduced Power Stage Controller module.</td>
 170:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>AT90PWM81</td>
 171:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 172:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 173:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 174:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_pscr_disable()</td>
 175:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the Reduced Power Stage Controller module.</td>
 176:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>AT90PWM81</td>
 177:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 178:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 179:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 180:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_psc0_enable()</td>
 181:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the Power Stage Controller 0 module.</td>
 182:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 183:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 184:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 185:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 186:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_psc0_disable()</td>
 187:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the Power Stage Controller 0 module.</td>
 188:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 189:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 190:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 191:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 192:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_psc1_enable()</td>
 193:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the Power Stage Controller 1 module.</td>
 194:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 195:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 196:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 197:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 198:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_psc1_disable()</td>
 199:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the Power Stage Controller 1 module.</td>
 200:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 201:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 202:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 203:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 204:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_psc2_enable()</td>
 205:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the Power Stage Controller 2 module.</td>
 206:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM81</td>
 207:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 208:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 209:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 210:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_psc2_disable()</td>
 211:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the Power Stage Controller 2 module.</td>
 212:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM81</td>
 213:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 214:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 215:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 216:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_ram0_enable()</td>
 217:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the SRAM block 0 .</td>
 218:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td> ATmega256RFR2, ATmega2564RFR2, ATmega128RFR2, ATmega1284RFR2, ATmega64RFR2, ATmega644RFR2<
 219:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 220:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 221:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 222:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_ram0_disable()</td>
 223:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the SRAM block 0. </td>
 224:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td> ATmega256RFR2, ATmega2564RFR2, ATmega128RFR2, ATmega1284RFR2, ATmega64RFR2, ATmega644RFR2<
 225:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 226:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 227:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 228:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_ram1_enable()</td>
 229:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the SRAM block 1 .</td>
 230:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td> ATmega256RFR2, ATmega2564RFR2, ATmega128RFR2, ATmega1284RFR2, ATmega64RFR2, ATmega644RFR2<
 231:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 232:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 233:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 234:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_ram1_disable()</td>
 235:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the SRAM block 1. </td>
 236:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td> ATmega256RFR2, ATmega2564RFR2, ATmega128RFR2, ATmega1284RFR2, ATmega64RFR2, ATmega644RFR2<
 237:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 238:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 239:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 240:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_ram2_enable()</td>
 241:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the SRAM block 2 .</td>
 242:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td> ATmega256RFR2, ATmega2564RFR2, ATmega128RFR2, ATmega1284RFR2, ATmega64RFR2, ATmega644RFR2<
 243:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 244:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 245:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 246:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_ram2_disable()</td>
 247:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the SRAM block 2. </td>
 248:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td> ATmega256RFR2, ATmega2564RFR2, ATmega128RFR2, ATmega1284RFR2, ATmega64RFR2, ATmega644RFR2<
 249:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 250:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 251:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 252:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_ram3_enable()</td>
 253:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the SRAM block 3 .</td>
 254:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td> ATmega256RFR2, ATmega2564RFR2, ATmega128RFR2, ATmega1284RFR2, ATmega64RFR2, ATmega644RFR2<
 255:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 256:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 257:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 258:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_ram3_disable()</td>
 259:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the SRAM block 3. </td>
 260:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td> ATmega256RFR2, ATmega2564RFR2, ATmega128RFR2, ATmega1284RFR2, ATmega64RFR2, ATmega644RFR2<
 261:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 262:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 263:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 264:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_rtc_disable()</td>
 265:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the RTC module</td>
 266:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 267:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 268:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 269:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 270:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_rtc_enable()</td>
 271:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the RTC module</td>
 272:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 273:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 274:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 275:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 276:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_spi_enable()</td>
 277:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the Serial Peripheral Interface module.</td>
 278:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega1284, ATmega128RFA1, ATmega2560, ATmega2561, AT90U
 279:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 280:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 281:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 282:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_spi_disable()</td>
 283:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the Serial Peripheral Interface module.</td>
 284:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega1284, ATmega128RFA1, ATmega2560, ATmega2561, AT90U
 285:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 286:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 287:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 288:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_spic_disable()</td>
 289:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the SPI module on PortC</td>
 290:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 291:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 292:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 293:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 294:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_spic_enable()</td>
 295:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the SPI module on PortC</td>
 296:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 297:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 298:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 299:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 300:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_spid_disable()</td>
 301:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the SPI module on PortD</td>
 302:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 303:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 304:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 305:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 306:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_spid_enable()</td>
 307:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the SPI module on PortD</td>
 308:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 309:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 310:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 311:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 312:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_tc0c_disable()</td>
 313:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the TC0 module on PortC</td>
 314:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 315:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 316:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 317:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 318:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_tc0c_enable()</td>
 319:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the TC0 module on PortC</td>
 320:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 321:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 322:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 323:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 324:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_tc0d_disable()</td>
 325:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the TC0 module on PortD</td>
 326:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 327:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 328:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 329:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 330:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_tc0d_enable()</td>
 331:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the TC0 module on PortD</td>
 332:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 333:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 334:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 335:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 336:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_tc0e_disable()</td>
 337:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the TC0 module on PortE</td>
 338:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 339:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 340:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 341:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 342:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_tc0e_enable()</td>
 343:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the TC0 module on PortE</td>
 344:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 345:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 346:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 347:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 348:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_tc0f_disable()</td>
 349:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the TC0 module on PortF</td>
 350:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 351:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 352:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 353:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 354:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_tc0f_enable()</td>
 355:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the TC0 module on PortF</td>
 356:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 357:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 358:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 359:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 360:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_tc1c_disable()</td>
 361:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the TC1 module on PortC</td>
 362:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 363:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 364:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 365:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 366:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_tc1c_enable()</td>
 367:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the TC1 module on PortC</td>
 368:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 369:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 370:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 371:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 372:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_twic_disable()</td>
 373:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the Two Wire Interface module on PortC</td>
 374:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 375:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 376:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 377:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 378:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_twic_enable()</td>
 379:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the Two Wire Interface module on PortC</td>
 380:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 381:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 382:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 383:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 384:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_twie_disable()</td>
 385:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the Two Wire Interface module on PortE</td>
 386:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 387:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 388:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 389:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 390:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_twie_enable()</td>
 391:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the Two Wire Interface module on PortE</td>
 392:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega64D3, ATxmega128D3, ATxmega192D3, ATxmega256D3</td>
 393:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 394:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 395:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 396:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_timer0_enable()</td>
 397:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the Timer 0 module.</td>
 398:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega1284, ATmega128RFA1, ATmega2560, ATmega2561, AT90U
 399:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 400:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 401:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 402:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_timer0_disable()</td>
 403:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the Timer 0 module.</td>
 404:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega1284, ATmega128RFA1, ATmega2560, ATmega2561, AT90U
 405:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 406:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 407:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 408:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_timer1_enable()</td>
 409:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the Timer 1 module.</td>
 410:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega1284, ATmega128RFA1, ATmega2560, ATmega2561, AT90U
 411:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 412:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 413:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 414:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_timer1_disable()</td>
 415:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the Timer 1 module.</td>
 416:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega1284, ATmega128RFA1, ATmega2560, ATmega2561, AT90U
 417:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 418:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 419:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 420:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_timer2_enable()</td>
 421:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the Timer 2 module.</td>
 422:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega1284, ATmega128RFA1, ATmega2560, ATmega2561, AT90U
 423:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 424:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 425:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 426:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_timer2_disable()</td>
 427:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the Timer 2 module.</td>
 428:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega1284, ATmega128RFA1, ATmega2560, ATmega2561, AT90U
 429:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 430:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 431:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 432:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_timer3_enable()</td>
 433:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the Timer 3 module.</td>
 434:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega1284, ATmega128RFA1, ATmega2560, ATmega2561, AT90U
 435:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 436:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 437:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 438:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_timer3_disable()</td>
 439:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the Timer 3 module.</td>
 440:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega1284, ATmega128RFA1, ATmega2560, ATmega2561, AT90U
 441:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 442:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 443:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 444:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_timer4_enable()</td>
 445:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the Timer 4 module.</td>
 446:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, ATmega256RFR2, AT
 447:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 448:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 449:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 450:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_timer4_disable()</td>
 451:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the Timer 4 module.</td>
 452:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, ATmega256RFR2, AT
 453:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 454:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 455:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 456:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_timer5_enable()</td>
 457:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the Timer 5 module.</td>
 458:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, ATmega256RFR2, AT
 459:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 460:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 461:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 462:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_timer5_disable()</td>
 463:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the Timer 5 module.</td>
 464:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, ATmega256RFR2, AT
 465:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 466:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 467:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 468:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_twi_enable()</td>
 469:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the Two Wire Interface module.</td>
 470:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega1284, ATmega128RFA1, ATmega2560, ATmega2561, AT90U
 471:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 472:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 473:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 474:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_twi_disable()</td>
 475:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the Two Wire Interface module.</td>
 476:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega1284, ATmega128RFA1, ATmega2560, ATmega2561, AT90U
 477:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 478:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 479:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 480:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usart_enable()</td>
 481:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the USART module.</td>
 482:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 483:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 484:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 485:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 486:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usart_disable()</td>
 487:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the USART module.</td>
 488:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 489:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 490:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 491:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 492:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usart0_enable()</td>
 493:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the USART 0 module.</td>
 494:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega1284, ATmega128RFA1, ATmega2560, ATmega2561, ATmeg
 495:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 496:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 497:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 498:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usart0_disable()</td>
 499:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the USART 0 module.</td>
 500:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega1284, ATmega128RFA1, ATmega2560, ATmega2561, ATmeg
 501:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 502:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 503:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 504:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usart1_enable()</td>
 505:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the USART 1 module.</td>
 506:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 507:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 508:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 509:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 510:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usart1_disable()</td>
 511:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the USART 1 module.</td>
 512:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 513:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 514:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 515:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 516:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usart2_enable()</td>
 517:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the USART 2 module.</td>
 518:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 519:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 520:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 521:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 522:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usart2_disable()</td>
 523:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the USART 2 module.</td>
 524:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 525:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 526:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 527:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 528:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usart3_enable()</td>
 529:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the USART 3 module.</td>
 530:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 531:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 532:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 533:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 534:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usart3_disable()</td>
 535:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the USART 3 module.</td>
 536:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 537:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 538:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 539:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 540:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usartc0_disable()</td>
 541:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td> Disable the USART0 module on PortC</td>
 542:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 543:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 544:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 545:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 546:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usartc0_enable()</td>
 547:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td> Enable the USART0 module on PortC</td>
 548:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 549:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 550:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 551:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 552:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usartd0_disable()</td>
 553:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td> Disable the USART0 module on PortD</td>
 554:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 555:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 556:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 557:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 558:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usartd0_enable()</td>
 559:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td> Enable the USART0 module on PortD</td>
 560:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 561:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 562:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 563:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 564:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usarte0_disable()</td>
 565:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td> Disable the USART0 module on PortE</td>
 566:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 567:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 568:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 569:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 570:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usarte0_enable()</td>
 571:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td> Enable the USART0 module on PortE</td>
 572:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 573:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 574:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 575:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 576:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usartf0_disable()</td>
 577:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td> Disable the USART0 module on PortF</td>
 578:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 579:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 580:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 581:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 582:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usartf0_enable()</td>
 583:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td> Enable the USART0 module on PortF</td>
 584:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 585:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 586:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 587:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 588:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usb_enable()</td>
 589:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the USB module.</td>
 590:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>AT90USB646, AT90USB647, AT90USB1286, AT90USB1287, ATxmega64B1, ATxmega128B1, ATxmega64B3, A
 591:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 592:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 593:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 594:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usb_disable()</td>
 595:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the USB module.</td>
 596:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>AT90USB646, AT90USB647, AT90USB1286, AT90USB1287, ATxmega64B1, ATxmega128B1, ATxmega64B3, A
 597:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 598:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 599:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 600:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usi_enable()</td>
 601:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the Universal Serial Interface module.</td>
 602:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATtiny24, ATtiny44, ATtiny84, ATtiny84A, ATtiny25, ATtiny45, ATtiny85, ATtiny261, ATtiny461
 603:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 604:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 605:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 606:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_usi_disable()</td>
 607:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the Universal Serial Interface module.</td>
 608:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATtiny24, ATtiny44, ATtiny84, ATtiny84A, ATtiny25, ATtiny45, ATtiny85, ATtiny261, ATtiny461
 609:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 610:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 611:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 612:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_vadc_enable()</td>
 613:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable the Voltage ADC module.</td>
 614:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega406</td>
 615:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 616:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 617:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 618:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_vadc_disable()</td>
 619:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable the Voltage ADC module.</td>
 620:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATmega406</td>
 621:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 622:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 623:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 624:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_all_enable()</td>
 625:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Enable all modules.</td>
 626:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega6A4, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3, ATxmegaA1, ATxmegaA1U, ATx
 627:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 628:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 629:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   <tr>
 630:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>power_all_disable()</td>
 631:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>Disable all modules.</td>
 632:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     <td>ATxmega6A4, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3, ATxmegaA1, ATxmegaA1U, ATx
 633:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****   </tr>
 634:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** </table>
 635:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** </center>
 636:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** </small>
 637:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 638:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** @} */
 639:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 640:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** // Xmega A series has AES, EBI and DMA bits
 641:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** // Include any other device on need basis
 642:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #if defined(__AVR_ATxmega16A4__) \
 643:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega16A4U__) \
 644:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega32A4U__) \
 645:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega32A4__) \
 646:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega64A1__) \
 647:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega64A1U__) \
 648:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega64A3__) \
 649:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega64A3U__) \
 650:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega64A4U__) \
 651:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega128A1__) \
 652:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega128A1U__) \
 653:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega128A3__) \
 654:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega128A3U__) \
 655:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega128A4U__) \
 656:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega192A3__) \
 657:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega192A3U__) \
 658:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3__) \
 659:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3U__) \
 660:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3B__) \
 661:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3BU__) \
 662:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega384C3__)
 663:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 664:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 665:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_aes_enable()  (PR_PRGEN &= (uint8_t)~(PR_AES_bm))
 666:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_aes_disable() (PR_PRGEN |= (uint8_t)PR_AES_bm)
 667:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 668:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_ebi_enable()  (PR_PRGEN &= (uint8_t)~(PR_EBI_bm))
 669:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_ebi_disable() (PR_PRGEN |= (uint8_t)PR_EBI_bm)
 670:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 671:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_dma_enable()    (PR_PRGEN &= (uint8_t)~(PR_DMA_bm))
 672:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_dma_disable()   (PR_PRGEN |= (uint8_t)PR_DMA_bm)
 673:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 674:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_daca_enable()     (PR_PRPA &= (uint8_t)~(PR_DAC_bm))
 675:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_daca_disable()    (PR_PRPA |= (uint8_t)PR_DAC_bm)
 676:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_dacb_enable()     (PR_PRPB &= (uint8_t)~(PR_DAC_bm))
 677:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_dacb_disable()    (PR_PRPB |= (uint8_t)PR_DAC_bm)
 678:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 679:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartc1_enable()  (PR_PRPC &= (uint8_t)~(PR_USART1_bm))
 680:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartc1_disable() (PR_PRPC |= (uint8_t)PR_USART1_bm)
 681:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartd1_enable()  (PR_PRPD &= (uint8_t)~(PR_USART1_bm))
 682:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartd1_disable() (PR_PRPD |= (uint8_t)PR_USART1_bm)
 683:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usarte1_enable()  (PR_PRPE &= (uint8_t)~(PR_USART1_bm))
 684:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usarte1_disable() (PR_PRPE |= (uint8_t)PR_USART1_bm)
 685:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartf1_enable()  (PR_PRPF &= (uint8_t)~(PR_USART1_bm))
 686:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartf1_disable() (PR_PRPF |= (uint8_t)PR_USART1_bm)
 687:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 688:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #if defined(__AVR_ATxmega384C3__) \
 689:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3BU__) \
 690:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega16A4U__) \
 691:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega32A4U__) \
 692:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega64A3U__) \
 693:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega64A4U__) \
 694:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega128A3U__) \
 695:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega128A4U__) \
 696:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega192A3U__) \
 697:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3U__) 
 698:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 699:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usb_enable()   (PR_PRGEN &= (uint8_t)~(PR_USB_bm))
 700:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usb_disable()  (PR_PRGEN &= (uint8_t)(PR_USB_bm))
 701:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 702:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable() \
 703:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do { \
 704:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRGEN &= (uint8_t)~(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm|PR_USB_bm); \
 705:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPA &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
 706:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPB &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
 707:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 708:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 709:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 710:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 711:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** } while(0)
 712:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 713:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable() \
 714:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do { \
 715:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRGEN |= (uint8_t)(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm|PR_USB_bm); \
 716:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPA |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
 717:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPB |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
 718:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
 719:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
 720:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
 721:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
 722:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** } while(0)
 723:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 724:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #else
 725:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 726:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable() \
 727:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do { \
 728:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRGEN &= (uint8_t)~(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
 729:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPA &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
 730:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPB &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
 731:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 732:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 733:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 734:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 735:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** } while(0)
 736:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 737:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 738:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable() \
 739:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do { \
 740:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRGEN|= (uint8_t)(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
 741:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPA |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
 742:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPB |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
 743:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
 744:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
 745:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
 746:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
 747:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** } while(0)
 748:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #endif
 749:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 750:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #endif
 751:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 752:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #if defined(__AVR_ATxmega64D3__) \
 753:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega128D3__) \
 754:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega192D3__) \
 755:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega256D3__)
 756:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 757:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_rtc_enable()      (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
 758:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_rtc_disable()     (PR_PRGEN |= (uint8_t)PR_RTC_bm)
 759:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 760:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
 761:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
 762:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 763:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
 764:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
 765:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 766:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
 767:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
 768:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 769:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
 770:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
 771:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twie_enable()     (PR_PRPE &= (uint8_t)~(PR_TWI_bm))
 772:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twie_disable()    (PR_PRPE |= (uint8_t)PR_TWI_bm)
 773:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 774:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
 775:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
 776:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartd0_enable()  (PR_PRPD &= (uint8_t)~(PR_USART0_bm))
 777:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartd0_disable() (PR_PRPD |= (uint8_t)PR_USART0_bm)
 778:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
 779:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
 780:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartf0_enable()  (PR_PRPF &= (uint8_t)~(PR_USART0_bm))
 781:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartf0_disable() (PR_PRPF |= (uint8_t)PR_USART0_bm)
 782:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 783:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
 784:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
 785:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spid_enable()     (PR_PRPD &= (uint8_t)~(PR_SPI_bm))
 786:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spid_disable()    (PR_PRPD |= (uint8_t)PR_SPI_bm)
 787:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 788:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_hiresc_enable()   (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
 789:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_hiresc_disable()  (PR_PRPC |= (uint8_t)PR_HIRES_bm)
 790:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 791:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
 792:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
 793:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 794:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
 795:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0c_disable()    (PR_PRPC |= (uint8_t)PR_TC0_bm)
 796:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC0_bm))
 797:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0d_disable()    (PR_PRPD |= (uint8_t)PR_TC0_bm)
 798:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
 799:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0e_disable()    (PR_PRPE |= (uint8_t)PR_TC0_bm)
 800:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC0_bm))
 801:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0f_disable()    (PR_PRPF |= (uint8_t)PR_TC0_bm)
 802:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 803:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable() \
 804:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do { \
 805:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRGEN &= (uint8_t)~(PR_RTC_bm|PR_EVSYS_bm); \
 806:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPA &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
 807:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 808:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPD &= (uint8_t)~(PR_USART0_bm|PR_SPI_bm|PR_TC0_bm); \
 809:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_TC0_bm); \
 810:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPF &= (uint8_t)~(PR_USART0_bm|PR_TC0_bm); \
 811:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** } while(0)
 812:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 813:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 814:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable() \
 815:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do { \
 816:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRGEN|= (uint8_t)(PR_RTC_bm|PR_EVSYS_bm); \
 817:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
 818:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 819:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPD |= (uint8_t)(PR_USART0_bm|PR_SPI_bm|PR_TC0_bm); \
 820:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_TC0_bm); \
 821:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPF |= (uint8_t)(PR_USART0_bm|PR_TC0_bm); \
 822:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** } while(0)
 823:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #endif
 824:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 825:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #if defined(__AVR_ATxmega16C4__) \
 826:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega32C4__) \
 827:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega64C3__) \
 828:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega128C3__) \
 829:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega192C3__) \
 830:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega256C3__) 
 831:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 832:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usb_enable()   (PR_PRGEN &= (uint8_t)~(PR_USB_bm))
 833:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usb_disable()  (PR_PRGEN &= (uint8_t)(PR_USB_bm))
 834:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 835:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_aes_enable()  (PR_PRGEN &= (uint8_t)~(PR_AES_bm))
 836:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_aes_disable() (PR_PRGEN |= (uint8_t)PR_AES_bm)
 837:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 838:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
 839:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
 840:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 841:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
 842:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
 843:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 844:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_dma_enable()    (PR_PRGEN &= (uint8_t)~(PR_DMA_bm))
 845:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_dma_disable()   (PR_PRGEN |= (uint8_t)PR_DMA_bm)
 846:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 847:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
 848:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
 849:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 850:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
 851:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
 852:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 853:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
 854:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
 855:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twie_enable()     (PR_PRPE &= (uint8_t)~(PR_TWI_bm))
 856:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twie_disable()    (PR_PRPE |= (uint8_t)PR_TWI_bm)
 857:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 858:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartc1_enable()  (PR_PRPC &= (uint8_t)~(PR_USART1_bm))
 859:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartc1_disable() (PR_PRPC |= (uint8_t)PR_USART1_bm)
 860:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 861:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
 862:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
 863:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartd0_enable()  (PR_PRPD &= (uint8_t)~(PR_USART0_bm))
 864:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartd0_disable() (PR_PRPD |= (uint8_t)PR_USART0_bm)
 865:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
 866:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
 867:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartf0_enable()  (PR_PRPF &= (uint8_t)~(PR_USART0_bm))
 868:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartf0_disable() (PR_PRPF |= (uint8_t)PR_USART0_bm)
 869:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 870:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
 871:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
 872:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spid_enable()     (PR_PRPD &= (uint8_t)~(PR_SPI_bm))
 873:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spid_disable()    (PR_PRPD |= (uint8_t)PR_SPI_bm)
 874:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 875:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_hiresc_enable()   (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
 876:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_hiresc_disable()  (PR_PRPC |= (uint8_t)PR_HIRES_bm)
 877:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 878:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
 879:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
 880:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 881:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
 882:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0c_disable()    (PR_PRPC |= (uint8_t)PR_TC0_bm)
 883:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC0_bm))
 884:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0d_disable()    (PR_PRPD |= (uint8_t)PR_TC0_bm)
 885:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
 886:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0e_disable()    (PR_PRPE |= (uint8_t)PR_TC0_bm)
 887:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC0_bm))
 888:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0f_disable()    (PR_PRPF |= (uint8_t)PR_TC0_bm)
 889:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 890:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable() \
 891:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do { \
 892:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRGEN &= (uint8_t)~(PR_USB_bm|PR_AES_bm|PR_DMA_bm|PR_RTC_bm|PR_EVSYS_bm); \
 893:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPA &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
 894:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_USART1_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 895:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPD &= (uint8_t)~(PR_USART0_bm|PR_SPI_bm|PR_TC0_bm); \
 896:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_TC0_bm); \
 897:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPF &= (uint8_t)~(PR_USART0_bm|PR_TC0_bm); \
 898:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     } while(0)
 899:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 900:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable() \
 901:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do { \
 902:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRGEN |= (uint8_t)(PR_USB_bm|PR_AES_bm|PR_DMA_bm|PR_RTC_bm|PR_EVSYS_bm); \
 903:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
 904:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_USART1_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
 905:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPD |= (uint8_t)(PR_USART0_bm|PR_SPI_bm|PR_TC0_bm); \
 906:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_TC0_bm); \
 907:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPF |= (uint8_t)(PR_USART0_bm|PR_TC0_bm); \
 908:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     } while(0)
 909:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 910:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #endif
 911:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 912:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #if defined(__AVR_ATxmega16A4__) \
 913:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega16A4U__) \
 914:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega16D4__) \
 915:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega32A4__) \
 916:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega32A4U__) \
 917:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega32D4__) \
 918:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega64A1__) \
 919:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega64A1U__) \
 920:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega64A3__) \
 921:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega64A3U__) \
 922:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega64A4U__) \
 923:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega128A1__) \
 924:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega128A1U__) \
 925:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega128A3__) \
 926:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega128A3U__) \
 927:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega128A4U__) \
 928:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega192A3__) \
 929:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega192A3U__) \
 930:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3__) \
 931:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3U__) \
 932:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3B__) \
 933:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3BU__) \
 934:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega384C3__)
 935:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 936:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 937:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
 938:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
 939:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 940:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
 941:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
 942:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 943:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
 944:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
 945:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adcb_enable()     (PR_PRPB &= (uint8_t)~(PR_ADC_bm))
 946:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adcb_disable()    (PR_PRPB |= (uint8_t)PR_ADC_bm)
 947:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 948:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
 949:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
 950:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_acb_enable()      (PR_PRPB &= (uint8_t)~(PR_AC_bm))
 951:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_acb_disable()     (PR_PRPB |= (uint8_t)PR_AC_bm)
 952:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 953:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
 954:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
 955:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twid_enable()     (PR_PRPD &= (uint8_t)~(PR_TWI_bm))
 956:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twid_disable()    (PR_PRPD |= (uint8_t)PR_TWI_bm)
 957:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twie_enable()     (PR_PRPE &= (uint8_t)~(PR_TWI_bm))
 958:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twie_disable()    (PR_PRPE |= (uint8_t)PR_TWI_bm)
 959:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twif_enable()     (PR_PRPF &= (uint8_t)~(PR_TWI_bm))
 960:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twif_disable()    (PR_PRPF |= (uint8_t)PR_TWI_bm)
 961:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 962:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
 963:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
 964:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartd0_enable()  (PR_PRPD &= (uint8_t)~(PR_USART0_bm))
 965:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartd0_disable() (PR_PRPD |= (uint8_t)PR_USART0_bm)
 966:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
 967:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
 968:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartf0_enable()  (PR_PRPF &= (uint8_t)~(PR_USART0_bm))
 969:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartf0_disable() (PR_PRPF |= (uint8_t)PR_USART0_bm)
 970:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 971:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
 972:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
 973:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spid_enable()     (PR_PRPD &= (uint8_t)~(PR_SPI_bm))
 974:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spid_disable()    (PR_PRPD |= (uint8_t)PR_SPI_bm)
 975:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spie_enable()     (PR_PRPE &= (uint8_t)~(PR_SPI_bm))
 976:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spie_disable()    (PR_PRPE |= (uint8_t)PR_SPI_bm)
 977:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spif_enable()     (PR_PRPF &= (uint8_t)~(PR_SPI_bm))
 978:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spif_disable()    (PR_PRPF |= (uint8_t)PR_SPI_bm)
 979:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 980:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_hiresc_enable()   (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
 981:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_hiresc_disable()  (PR_PRPC |= (uint8_t)PR_HIRES_bm)
 982:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_hiresd_enable()   (PR_PRPD &= (uint8_t)~(PR_HIRES_bm))
 983:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_hiresd_disable()  (PR_PRPD |= (uint8_t)PR_HIRES_bm)
 984:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_hirese_enable()   (PR_PRPE &= (uint8_t)~(PR_HIRES_bm))
 985:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_hirese_disable()  (PR_PRPE |= (uint8_t)PR_HIRES_bm)
 986:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_hiresf_enable()   (PR_PRPF &= (uint8_t)~(PR_HIRES_bm))
 987:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_hiresf_disable()  (PR_PRPF |= (uint8_t)PR_HIRES_bm)
 988:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 989:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
 990:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
 991:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc1d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC1_bm))
 992:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc1d_disable()    (PR_PRPD |= (uint8_t)PR_TC1_bm)
 993:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc1e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC1_bm))
 994:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc1e_disable()    (PR_PRPE |= (uint8_t)PR_TC1_bm)
 995:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc1f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC1_bm))
 996:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc1f_disable()    (PR_PRPF |= (uint8_t)PR_TC1_bm)
 997:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
 998:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
 999:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0c_disable()    (PR_PRPC |= (uint8_t)PR_TC0_bm)
1000:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC0_bm))
1001:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0d_disable()    (PR_PRPD |= (uint8_t)PR_TC0_bm)
1002:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
1003:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0e_disable()    (PR_PRPE |= (uint8_t)PR_TC0_bm)
1004:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC0_bm))
1005:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0f_disable()    (PR_PRPF |= (uint8_t)PR_TC0_bm)
1006:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1007:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #endif
1008:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1009:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #if defined(__AVR_ATxmega64D4__) \
1010:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega128D4__) 
1011:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1012:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
1013:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
1014:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1015:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
1016:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
1017:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1018:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
1019:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
1020:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1021:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
1022:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
1023:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1024:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
1025:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
1026:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twie_enable()     (PR_PRPE &= (uint8_t)~(PR_TWI_bm))
1027:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twie_disable()    (PR_PRPE |= (uint8_t)PR_TWI_bm)
1028:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1029:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
1030:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
1031:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartd0_enable()  (PR_PRPD &= (uint8_t)~(PR_USART0_bm))
1032:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartd0_disable() (PR_PRPD |= (uint8_t)PR_USART0_bm)
1033:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
1034:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
1035:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartf0_enable()  (PR_PRPF &= (uint8_t)~(PR_USART0_bm))
1036:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartf0_disable() (PR_PRPF |= (uint8_t)PR_USART0_bm)
1037:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1038:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
1039:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
1040:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spid_enable()     (PR_PRPD &= (uint8_t)~(PR_SPI_bm))
1041:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spid_disable()    (PR_PRPD |= (uint8_t)PR_SPI_bm)
1042:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1043:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_hiresc_enable()   (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
1044:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_hiresc_disable()  (PR_PRPC |= (uint8_t)PR_HIRES_bm)
1045:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1046:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
1047:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
1048:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1049:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
1050:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0c_disable()    (PR_PRPC |= (uint8_t)PR_TC0_bm)
1051:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC0_bm))
1052:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0d_disable()    (PR_PRPD |= (uint8_t)PR_TC0_bm)
1053:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
1054:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0e_disable()    (PR_PRPE |= (uint8_t)PR_TC0_bm)
1055:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC0_bm))
1056:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0f_disable()    (PR_PRPF |= (uint8_t)PR_TC0_bm)
1057:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1058:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable() \
1059:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do { \
1060:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRGEN &= (uint8_t)~(PR_RTC_bm|PR_EVSYS_bm); \
1061:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPA &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1062:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1063:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPD &= (uint8_t)~(PR_USART0_bm|PR_SPI_bm|PR_TC0_bm); \
1064:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_TC0_bm); \
1065:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPF &= (uint8_t)~(PR_USART0_bm|PR_TC0_bm); \
1066:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     } while(0)
1067:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1068:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable() \
1069:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do { \
1070:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRGEN |= (uint8_t)(PR_RTC_bm|PR_EVSYS_bm); \
1071:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1072:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1073:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPD |= (uint8_t)(PR_USART0_bm|PR_SPI_bm|PR_TC0_bm); \
1074:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_TC0_bm); \
1075:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPF |= (uint8_t)(PR_USART0_bm|PR_TC0_bm); \
1076:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     } while(0)
1077:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1078:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #endif
1079:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1080:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #if defined(__AVR_ATxmega16D4__) \
1081:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATxmega32D4__) 
1082:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1083:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable() \
1084:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do { \
1085:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRGEN &= (uint8_t)~(PR_RTC_bm|PR_EVSYS_bm); \
1086:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPA &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1087:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPB &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1088:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1089:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1090:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1091:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1092:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** } while(0)
1093:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1094:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1095:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable() \
1096:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do { \
1097:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRGEN|= (uint8_t)(PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1098:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1099:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPB |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1100:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1101:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1102:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1103:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1104:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** } while(0)
1105:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1106:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined (__AVR_ATxmega64B1__) \
1107:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined (__AVR_ATxmega64B3__) \
1108:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined (__AVR_ATxmega128B1__) \
1109:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined (__AVR_ATxmega128B3__) 
1110:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_lcd_enable()  (PR_PRGEN &= (uint8_t)~(PR_LCD_bm))
1111:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_lcd_disable() (PR_PRGEN |= (uint8_t)PR_LCD_bm)
1112:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1113:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usb_enable()  (PR_PRGEN &= (uint8_t)~(PR_USB_bm))
1114:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usb_disable() (PR_PRGEN |= (uint8_t)PR_USB_bm)
1115:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1116:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_aes_enable()  (PR_PRGEN &= (uint8_t)~(PR_AES_bm))
1117:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_aes_disable() (PR_PRGEN |= (uint8_t)PR_AES_bm)
1118:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1119:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
1120:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
1121:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1122:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
1123:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
1124:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1125:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_dma_enable()    (PR_PRGEN &= (uint8_t)~(PR_DMA_bm))
1126:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_dma_disable()   (PR_PRGEN |= (uint8_t)PR_DMA_bm)
1127:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1128:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
1129:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
1130:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adcb_enable()     (PR_PRPB &= (uint8_t)~(PR_ADC_bm))
1131:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adcb_disable()    (PR_PRPB |= (uint8_t)PR_ADC_bm)
1132:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1133:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
1134:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
1135:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_acb_enable()      (PR_PRPB &= (uint8_t)~(PR_AC_bm))
1136:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_acb_disable()     (PR_PRPB |= (uint8_t)PR_AC_bm)
1137:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1138:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
1139:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
1140:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1141:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
1142:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
1143:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
1144:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
1145:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1146:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
1147:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
1148:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1149:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_hiresc_enable()     (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
1150:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_hiresc_disable()    (PR_PRPC |= (uint8_t)PR_HIRES_bm)
1151:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1152:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
1153:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
1154:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1155:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0c_enable()  (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
1156:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0c_disable() (PR_PRPC |= (uint8_t)PR_TC0_bm)
1157:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0e_enable()  (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
1158:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_tc0e_disable() (PR_PRPE |= (uint8_t)PR_TC0_bm)
1159:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1160:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable() \
1161:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do { \
1162:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRGEN &= (uint8_t)~(PR_LCD_bm|PR_USB_bm|PR_AES_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1163:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPA &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1164:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPB &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1165:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1166:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPE &= (uint8_t)~(PR_USART0_bm|PR_TC0_bm); \
1167:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     } while(0)
1168:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1169:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable() \
1170:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do { \
1171:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRGEN |= (uint8_t)(PR_LCD_bm|PR_USB_bm|PR_AES_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1172:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1173:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPB |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1174:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1175:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PR_PRPE |= (uint8_t)(PR_USART0_bm|PR_TC0_bm); \
1176:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     } while(0)
1177:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1178:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATmega640__) \
1179:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega1280__) \
1180:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega1281__) \
1181:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega2560__) \
1182:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega2561__) 
1183:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1184:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
1185:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
1186:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1187:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1188:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1189:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1190:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1191:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1192:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1193:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1194:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1195:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1196:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1197:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1198:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1199:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
1200:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
1201:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1202:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
1203:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
1204:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1205:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer4_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM4))
1206:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer4_disable()  (PRR1 |= (uint8_t)(1 << PRTIM4))
1207:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1208:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer5_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM5))
1209:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer5_disable()  (PRR1 |= (uint8_t)(1 << PRTIM5))
1210:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1211:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
1212:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
1213:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1214:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
1215:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
1216:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1217:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart2_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART2))
1218:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart2_disable()  (PRR1 |= (uint8_t)(1 << PRUSART2))
1219:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1220:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart3_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART3))
1221:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart3_disable()  (PRR1 |= (uint8_t)(1 << PRUSART3))
1222:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1223:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable() \
1224:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
1225:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
1226:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)|(1<<PRUSART2)|
1227:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
1228:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1229:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable() \
1230:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
1231:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
1232:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)|(1<<PRUSART2)|(
1233:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
1234:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1235:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1236:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATmega128RFA1__)
1237:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1238:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
1239:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
1240:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1241:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1242:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1243:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1244:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1245:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1246:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1247:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1248:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1249:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1250:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1251:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1252:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1253:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
1254:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
1255:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1256:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
1257:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
1258:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1259:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer4_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM4))
1260:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer4_disable()  (PRR1 |= (uint8_t)(1 << PRTIM4))
1261:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1262:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer5_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM5))
1263:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer5_disable()  (PRR1 |= (uint8_t)(1 << PRTIM5))
1264:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1265:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
1266:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
1267:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1268:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
1269:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
1270:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1271:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable() \
1272:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
1273:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
1274:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)); \
1275:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
1276:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1277:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable() \
1278:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
1279:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
1280:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)); \
1281:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
1282:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1283:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATmega256RFR2__) \
1284:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega128RFR2__) \
1285:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega64RFR2__) \
1286:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega2564RFR2__) \
1287:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega1284RFR2__) \
1288:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega644RFR2__) \
1289:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1290:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()           (PRR0 &= (uint8_t)~(1 << PRADC))
1291:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()          (PRR0 |= (uint8_t)(1 << PRADC))
1292:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1293:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_enable()        (PRR0 &= (uint8_t)~(1 << PRUSART0))
1294:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_disable()       (PRR0 |= (uint8_t)(1 << PRUSART0))
1295:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1296:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()           (PRR0 &= (uint8_t)~(1 << PRSPI))
1297:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()          (PRR0 |= (uint8_t)(1 << PRSPI))
1298:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1299:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()        (PRR0 &= (uint8_t)~(1 << PRTIM1))
1300:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()       (PRR0 |= (uint8_t)(1 << PRTIM1))
1301:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1302:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_pga_enable()           (PRR0 &= (uint8_t)~(1 << PRPGA))
1303:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_pga_disable()          (PRR0 |= (uint8_t)(1 << PRPGA))
1304:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1305:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()        (PRR0 &= (uint8_t)~(1 << PRTIM0))
1306:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()       (PRR0 |= (uint8_t)(1 << PRTIM0))
1307:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1308:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_enable()        (PRR0 &= (uint8_t)~(1 << PRTIM2))
1309:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_disable()       (PRR0 |= (uint8_t)(1 << PRTIM2))
1310:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1311:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_enable()           (PRR0 &= (uint8_t)~(1 << PRTWI))
1312:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_disable()          (PRR0 |= (uint8_t)(1 << PRTWI))
1313:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1314:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart1_enable()        (PRR1 &= (uint8_t)~(1 << PRUSART1))
1315:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart1_disable()       (PRR1 |= (uint8_t)(1 << PRUSART1))
1316:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1317:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer3_enable()        (PRR1 &= (uint8_t)~(1 << PRTIM3))
1318:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer3_disable()       (PRR1 |= (uint8_t)(1 << PRTIM3))
1319:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1320:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer4_enable()        (PRR1 &= (uint8_t)~(1 << PRTIM4))
1321:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer4_disable()       (PRR1 |= (uint8_t)(1 << PRTIM4))
1322:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1323:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer5_enable()        (PRR1 &= (uint8_t)~(1 << PRTIM5))
1324:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer5_disable()       (PRR1 |= (uint8_t)(1 << PRTIM5))
1325:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1326:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_transceiver_enable()   (PRR1 &= (uint8_t)~(1 << PRTRX24))
1327:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_transceiver_disable()  (PRR1 |= (uint8_t)(1 << PRTRX24))
1328:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1329:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_ram0_enable()          (PRR2 &= (uint8_t)~(1 << PRRAM0))
1330:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_ram0_disable()         (PRR2 |= (uint8_t)(1 << PRRAM0))
1331:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1332:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_ram1_enable()          (PRR2 &= (uint8_t)~(1 << PRRAM1))
1333:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_ram1_disable()         (PRR2 |= (uint8_t)(1 << PRRAM1))
1334:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1335:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_ram2_enable()          (PRR2 &= (uint8_t)~(1 << PRRAM2))
1336:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_ram2_disable()         (PRR2 |= (uint8_t)(1 << PRRAM2))
1337:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1338:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_ram3_enable()          (PRR2 &= (uint8_t)~(1 << PRRAM3))
1339:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_ram3_disable()         (PRR2 |= (uint8_t)(1 << PRRAM3))
1340:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1341:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable() \
1342:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
1343:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
1344:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRUSART1)|(1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTRX24)); \
1345:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR2 &= (uint8_t)~((1<<PRRAM0)|(1<<PRRAM1)|(1<<PRRAM2)|(1<<PRRAM3)); \
1346:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
1347:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1348:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable() \
1349:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
1350:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
1351:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRUSART1)|(1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTRX24)); \
1352:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR2 |= (uint8_t)((1<<PRRAM0)|(1<<PRRAM1)|(1<<PRRAM2)|(1<<PRRAM3)); \
1353:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
1354:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1355:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_AT90USB646__) \
1356:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90USB647__) \
1357:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90USB1286__) \
1358:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90USB1287__)
1359:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1360:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
1361:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
1362:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1363:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1364:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1365:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1366:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1367:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1368:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1369:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1370:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1371:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1372:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1373:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1374:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1375:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
1376:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
1377:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1378:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
1379:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
1380:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1381:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
1382:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
1383:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1384:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
1385:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
1386:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1387:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable() \
1388:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
1389:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
1390:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
1391:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
1392:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1393:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable() \
1394:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
1395:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
1396:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
1397:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
1398:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1399:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1400:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATmega32U4__) \
1401:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega16U4__)
1402:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1403:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1404:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
1405:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
1406:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1407:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
1408:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
1409:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1410:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1411:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1412:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1413:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1414:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1415:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1416:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1417:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1418:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1419:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1420:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1421:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1422:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
1423:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
1424:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1425:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
1426:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
1427:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1428:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
1429:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
1430:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1431:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
1432:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
1433:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1434:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable() \
1435:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
1436:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRUSART0)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<P
1437:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
1438:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
1439:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1440:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable() \
1441:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
1442:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRUSART0)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PR
1443:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
1444:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
1445:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1446:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1447:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATmega32U6__)
1448:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1449:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1450:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
1451:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
1452:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1453:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1454:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1455:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1456:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1457:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1458:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1459:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1460:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1461:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1462:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1463:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1464:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1465:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
1466:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
1467:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1468:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
1469:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
1470:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1471:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
1472:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
1473:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1474:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
1475:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
1476:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1477:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable() \
1478:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
1479:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
1480:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
1481:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
1482:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1483:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable() \
1484:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
1485:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
1486:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
1487:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
1488:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1489:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1490:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_AT90PWM1__)
1491:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1492:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
1493:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
1494:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1495:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
1496:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
1497:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1498:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1499:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1500:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1501:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1502:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1503:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1504:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** /* Power Stage Controller 0 */
1505:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_psc0_enable()     (PRR &= (uint8_t)~(1 << PRPSC0))
1506:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_psc0_disable()    (PRR |= (uint8_t)(1 << PRPSC0))
1507:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1508:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** /* Power Stage Controller 1 */
1509:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_psc1_enable()     (PRR &= (uint8_t)~(1 << PRPSC1))
1510:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_psc1_disable()    (PRR |= (uint8_t)(1 << PRPSC1))
1511:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1512:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** /* Power Stage Controller 2 */
1513:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
1514:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
1515:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1516:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)|(1
1517:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<
1518:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1519:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1520:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_AT90PWM2__) \
1521:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90PWM2B__) \
1522:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90PWM3__) \
1523:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90PWM3B__) \
1524:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90PWM216__) \
1525:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90PWM316__)
1526:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1527:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
1528:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
1529:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1530:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
1531:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
1532:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1533:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart_enable()    (PRR &= (uint8_t)~(1 << PRUSART))
1534:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart_disable()   (PRR |= (uint8_t)(1 << PRUSART))
1535:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1536:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1537:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1538:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1539:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1540:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1541:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1542:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** /* Power Stage Controller 0 */
1543:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_psc0_enable()     (PRR &= (uint8_t)~(1 << PRPSC0))
1544:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_psc0_disable()    (PRR |= (uint8_t)(1 << PRPSC0))
1545:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1546:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** /* Power Stage Controller 1 */
1547:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_psc1_enable()     (PRR &= (uint8_t)~(1 << PRPSC1))
1548:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_psc1_disable()    (PRR |= (uint8_t)(1 << PRPSC1))
1549:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1550:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** /* Power Stage Controller 2 */
1551:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
1552:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
1553:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1554:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART)|(1<<PRTIM0)|(
1555:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART)|(1<<PRTIM0)|(1
1556:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1557:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1558:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_AT90PWM81__) \
1559:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90PWM161__)
1560:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1561:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
1562:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
1563:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1564:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
1565:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
1566:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1567:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1568:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1569:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1570:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** /* Reduced Power Stage Controller */
1571:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_pscr_enable()     (PRR &= (uint8_t)~(1 << PRPSCR))
1572:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_pscr_disable()    (PRR |= (uint8_t)(1 << PRPSCR))
1573:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1574:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** /* Power Stage Controller 2 */
1575:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
1576:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
1577:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1578:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRPSCR)|(1
1579:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRPSCR)|(1<
1580:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1581:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1582:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATmega165__) \
1583:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega165A__) \
1584:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega165P__) \
1585:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega165PA__) \
1586:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega325__) \
1587:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega325A__) \
1588:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega325PA__) \
1589:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega3250__) \
1590:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega3250A__) \
1591:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega3250PA__) \
1592:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega645__) \
1593:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega645A__) \
1594:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega645P__) \
1595:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega6450__) \
1596:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega6450A__) \
1597:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega6450P__)
1598:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1599:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
1600:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
1601:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1602:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
1603:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
1604:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1605:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
1606:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
1607:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1608:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1609:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1610:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1611:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1))
1612:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)))
1613:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1614:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1615:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATmega169__) \
1616:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega169A__) \
1617:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega169P__) \
1618:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega169PA__) \
1619:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega329__) \
1620:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega329A__) \
1621:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega329P__) \
1622:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega329PA__) \
1623:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega3290__) \
1624:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega3290A__) \
1625:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega3290P__) \
1626:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega3290PA__) \
1627:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega649__) \
1628:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega649A__) \
1629:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega649P__) \
1630:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega6490__) \
1631:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega6490A__) \
1632:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega6490P__)
1633:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1634:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
1635:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
1636:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1637:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
1638:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
1639:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1640:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
1641:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
1642:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1643:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1644:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1645:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1646:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_lcd_enable()      (PRR &= (uint8_t)~(1 << PRLCD))
1647:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_lcd_disable()     (PRR |= (uint8_t)(1 << PRLCD))
1648:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1649:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)|
1650:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)|(
1651:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1652:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1653:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATmega164A__) \
1654:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega164P__) \
1655:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega324A__) \
1656:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega324P__) \
1657:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega324PA__) \
1658:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega644P__) \
1659:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega644A__) \
1660:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega644PA__)
1661:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1662:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
1663:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
1664:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1665:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1666:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1667:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1668:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
1669:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
1670:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1671:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart1_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART1))
1672:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart1_disable()  (PRR0 |= (uint8_t)(1 << PRUSART1))
1673:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1674:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1675:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1676:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1677:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1678:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1679:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1680:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
1681:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
1682:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1683:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1684:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1685:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1686:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRUSART
1687:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRUSART1
1688:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1689:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1690:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATmega644__) \
1691:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega164PA__)
1692:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1693:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
1694:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
1695:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1696:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1697:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1698:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1699:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
1700:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
1701:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1702:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1703:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1704:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1705:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1706:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1707:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1708:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
1709:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
1710:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1711:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1712:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1713:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1714:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)
1715:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
1716:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1717:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1718:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATmega406__)
1719:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1720:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1721:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1722:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1723:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1724:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1725:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1726:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1727:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1728:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1729:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** /* Voltage ADC */
1730:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_vadc_enable()     (PRR0 &= (uint8_t)~(1 << PRVADC))
1731:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_vadc_disable()    (PRR0 |= (uint8_t)(1 << PRVADC))
1732:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1733:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC))
1734:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)))
1735:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1736:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1737:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATmega48__) \
1738:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega48A__) \
1739:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega48PA__) \
1740:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega48P__) \
1741:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega88__) \
1742:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega88A__) \
1743:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega88P__) \
1744:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega88PA__) \
1745:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega168__) \
1746:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega168A__) \
1747:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega168P__) \
1748:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega168PA__) \
1749:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega328__) \
1750:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega328P__) \
1751:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny48__) \
1752:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny88__) \
1753:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny828__)
1754:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1755:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
1756:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
1757:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1758:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
1759:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
1760:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1761:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
1762:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
1763:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1764:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1765:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1766:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1767:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1768:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1769:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1770:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #if !defined(__AVR_ATtiny828__)
1771:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1772:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR &= (uint8_t)~(1 << PRTIM2))
1773:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR |= (uint8_t)(1 << PRTIM2))
1774:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1775:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #endif
1776:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1777:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_enable()      (PRR &= (uint8_t)~(1 << PRTWI))
1778:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_disable()     (PRR |= (uint8_t)(1 << PRTWI))
1779:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1780:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #if defined(__AVR_ATtiny828__)
1781:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1782:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
1783:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|(
1784:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1785:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #else
1786:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1787:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
1788:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|(
1789:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1790:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #endif
1791:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1792:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATtiny24__) \
1793:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny24A__) \
1794:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny44__) \
1795:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny44A__) \
1796:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny84__) \
1797:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny84A__) \
1798:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny25__) \
1799:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny45__) \
1800:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny85__) \
1801:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny261__) \
1802:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny261A__) \
1803:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny461__) \
1804:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny461A__) \
1805:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny861__) \
1806:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny861A__) \
1807:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny43U__)
1808:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1809:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
1810:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
1811:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1812:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1813:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1814:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1815:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1816:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1817:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1818:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** /* Universal Serial Interface */
1819:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usi_enable()      (PRR &= (uint8_t)~(1 << PRUSI))
1820:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usi_disable()     (PRR |= (uint8_t)(1 << PRUSI))
1821:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1822:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRUSI)))
1823:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRUSI)))
1824:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1825:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATmega1284__)
1826:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1827:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
1828:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
1829:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1830:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1831:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1832:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1833:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1834:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1835:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1836:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1837:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1838:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1839:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1840:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1841:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1842:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
1843:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
1844:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1845:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
1846:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
1847:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1848:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
1849:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
1850:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1851:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable() \
1852:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
1853:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
1854:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 &= (uint8_t)~(1<<PRTIM3); \
1855:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
1856:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1857:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable() \
1858:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
1859:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
1860:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 |= (uint8_t)(1<<PRTIM3); \
1861:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
1862:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1863:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATmega1284P__)
1864:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1865:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1866:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
1867:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
1868:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1869:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1870:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1871:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1872:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1873:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1874:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1875:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1876:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1877:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1878:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1879:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1880:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1881:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
1882:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
1883:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1884:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
1885:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
1886:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1887:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
1888:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
1889:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1890:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart1_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART1))
1891:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart1_disable()  (PRR0 |= (uint8_t)(1 << PRUSART1))
1892:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1893:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable() \
1894:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
1895:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
1896:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 &= (uint8_t)~(1<<PRTIM3); \
1897:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
1898:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1899:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable() \
1900:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
1901:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
1902:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 |= (uint8_t)(1<<PRTIM3); \
1903:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
1904:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1905:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1906:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATmega32HVB__) \
1907:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega32HVBREVB__) \
1908:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega16HVB__) \
1909:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega16HVBREVB__)
1910:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1911:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1912:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1913:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1914:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1915:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1916:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1917:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1918:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1919:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1920:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1921:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** /* Voltage ADC */
1922:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_vadc_enable()     (PRR0 &= (uint8_t)~(1 << PRVADC))
1923:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_vadc_disable()    (PRR0 |= (uint8_t)(1 << PRVADC))
1924:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1925:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1926:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1927:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1928:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_vrm_enable()      (PRR0 &= (uint8_t)~(1 << PRVRM))
1929:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_vrm_disable()     (PRR0 |= (uint8_t)(1 << PRVRM))
1930:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1931:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)|
1932:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)|(
1933:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1934:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1935:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined (__AVR_ATA5790__) \
1936:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined (__AVR_ATA5795__)
1937:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1938:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** // Enable the voltage monitor 
1939:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_vmonitor_enable()          (PRR0 &= (uint8_t)~(1 << PRVM))
1940:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_vmonitor_disable()         (PRR0 |= (uint8_t)(1 << PRVM))
1941:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1942:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_irdriver_enable()          (PRR0 &= (uint8_t)~(1 << PRDS))
1943:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_irdriver_disable()         (PRR0 |= (uint8_t)(1 << PRDS))
1944:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1945:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_crypto_enable()            (PRR0 &= (uint8_t)~(1 << PRCU))
1946:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_crypto_disable()           (PRR0 |= (uint8_t)(1 << PRCU))
1947:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1948:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timermodulator_enable()    (PRR0 &= (uint8_t)~(1 << PRTM))
1949:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timermodulator_disable()   (PRR0 |= (uint8_t)(1 << PRTM))
1950:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1951:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()            (PRR0 &= (uint8_t)~(1 << PRT1))
1952:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()           (PRR0 |= (uint8_t)(1 << PRT1))
1953:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1954:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_enable()            (PRR0 &= (uint8_t)~(1 << PRT2))
1955:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_disable()           (PRR0 |= (uint8_t)(1 << PRT2))
1956:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1957:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer3_enable()            (PRR0 &= (uint8_t)~(1 << PRT3))
1958:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer3_disable()           (PRR0 |= (uint8_t)(1 << PRT3))
1959:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1960:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()               (PRR1 &= (uint8_t)~(1 << PRSPI))
1961:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()              (PRR1 |= (uint8_t)(1 << PRSPI))
1962:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1963:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_cinterface_enable()        (PRR1 &= (uint8_t)~(1 << PRCI))
1964:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_cinterface_disable()       (PRR1 |= (uint8_t)(1 << PRCI))
1965:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1966:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #if defined(__AVR_ATA5790__) 
1967:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1968:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_lfreceiver_enable()        (PRR0 &= (uint8_t)~(1 << PRLFR))            
1969:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_lfreceiver_disable()       (PRR0 |= (uint8_t)(1 << PRLFR))            
1970:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1971:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable() \
1972:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
1973:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRVM)|(1<<PRDS)|(1<<PRCU)|(1<<PRTM)|(1<<PRT3)|(1<<PRT2)|(1<<PRT1)|(1<<PR
1974:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRSPI)|(1<<PRCI)); \
1975:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
1976:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1977:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable() \
1978:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
1979:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRVM)|(1<<PRDS)|(1<<PRCU)|(1<<PRTM)|(1<<PRT3)|(1<<PRT2)|(1<<PRT1)|(1<<PRL
1980:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRSPI)|(1<<PRCI)); \
1981:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
1982:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1983:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATA5795__)
1984:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1985:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable() \
1986:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
1987:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRVM)|(1<<PRDS)|(1<<PRCU)|(1<<PRTM)|(1<<PRT3)|(1<<PRT2)|(1<<PRT1)); \
1988:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRSPI)|(1<<PRCI)); \
1989:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
1990:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1991:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable() \
1992:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
1993:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRVM)|(1<<PRDS)|(1<<PRCU)|(1<<PRTM)|(1<<PRT3)|(1<<PRT2)|(1<<PRT1)); \
1994:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRSPI)|(1<<PRCI)); \
1995:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
1996:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1997:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #endif
1998:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
1999:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATmega16M1__) \
2000:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega32C1__) \
2001:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega32M1__) \
2002:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega64C1__) \
2003:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega64M1__)
2004:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2005:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2006:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2007:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2008:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_lin_enable()      (PRR &= (uint8_t)~(1 << PRLIN))
2009:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_lin_disable()     (PRR |= (uint8_t)(1 << PRLIN))
2010:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2011:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2012:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2013:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2014:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2015:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2016:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2017:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2018:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2019:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2020:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_psc_enable()      (PRR &= (uint8_t)~(1 << PRPSC))
2021:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_psc_disable()     (PRR |= (uint8_t)(1 << PRPSC))
2022:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2023:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_can_enable()      (PRR &= (uint8_t)~(1 << PRCAN))
2024:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_can_disable()     (PRR |= (uint8_t)(1 << PRCAN))
2025:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2026:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRLIN)|(1<<PRSPI)|(1<<PRTIM0)|(1<
2027:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRLIN)|(1<<PRSPI)|(1<<PRTIM0)|(1<<
2028:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2029:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2030:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATtiny167__) \
2031:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny87__) \
2032:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATA5505__) \
2033:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATA5272__)
2034:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2035:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2036:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2037:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2038:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usi_enable()      (PRR &= (uint8_t)~(1 << PRUSI))
2039:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usi_disable()     (PRR |= (uint8_t)(1 << PRUSI))
2040:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2041:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2042:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2043:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2044:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2045:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2046:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2047:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2048:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2049:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2050:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_lin_enable()      (PRR &= (uint8_t)~(1 << PRLIN))
2051:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_lin_disable()     (PRR |= (uint8_t)(1 << PRLIN))
2052:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2053:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRUSI)|(1<<PRTIM0)|(1<<PRTIM1)|(1
2054:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRUSI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<
2055:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2056:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2057:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATtiny1634__)
2058:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2059:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2060:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2061:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2062:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_enable()      (PRR &= (uint8_t)~(1 << PRUSART0))
2063:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_disable()     (PRR |= (uint8_t)(1 << PRUSART0))
2064:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2065:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart1_enable()      (PRR &= (uint8_t)~(1 << PRUSART1))
2066:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart1_disable()     (PRR |= (uint8_t)(1 << PRUSART1))
2067:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2068:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usi_enable()      (PRR &= (uint8_t)~(1 << PRUSI))
2069:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usi_disable()     (PRR |= (uint8_t)(1 << PRUSI))
2070:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2071:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2072:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2073:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2074:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2075:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2076:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2077:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_enable()      (PRR &= (uint8_t)~(1 << PRTWI))
2078:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_disable()     (PRR |= (uint8_t)(1 << PRTWI))
2079:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2080:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1 << PRTWI)|(1 << PRUSI)|(1 << PRTIM0)|(1 << PR
2081:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1 << PRTWI)|(1 << PRUSI)|(1 << PRTIM0)|(1 << PRT
2082:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2083:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2084:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_AT90USB82__) \
2085:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90USB162__) \
2086:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega8U2__) \
2087:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega16U2__) \
2088:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega32U2__)
2089:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2090:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2091:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2092:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2093:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2094:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2095:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2096:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2097:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2098:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2099:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
2100:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
2101:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2102:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
2103:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
2104:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2105:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable() \
2106:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
2107:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)); \
2108:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRUSB)|(1<<PRUSART1)); \
2109:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
2110:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2111:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable() \
2112:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
2113:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)); \
2114:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRUSB)|(1<<PRUSART1)); \
2115:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
2116:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2117:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2118:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_AT90SCR100__)
2119:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2120:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
2121:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
2122:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2123:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2124:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2125:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2126:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2127:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2128:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2129:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2130:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2131:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2132:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2133:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2134:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2135:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2136:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2137:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2138:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usbh_enable()     (PRR1 &= (uint8_t)~(1 << PRUSBH))
2139:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usbh_disable()    (PRR1 |= (uint8_t)(1 << PRUSBH))
2140:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2141:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
2142:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
2143:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2144:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_hsspi_enable()    (PRR1 &= (uint8_t)~(1 << PRHSSPI))
2145:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_hsspi_disable()   (PRR1 |= (uint8_t)(1 << PRHSSPI))
2146:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2147:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_sci_enable()      (PRR1 &= (uint8_t)~(1 << PRSCI))
2148:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_sci_disable()     (PRR1 |= (uint8_t)(1 << PRSCI))
2149:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2150:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_aes_enable()      (PRR1 &= (uint8_t)~(1 << PRAES))
2151:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_aes_disable()     (PRR1 |= (uint8_t)(1 << PRAES))
2152:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2153:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_kb_enable()       (PRR1 &= (uint8_t)~(1 << PRKB))
2154:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_kb_disable()      (PRR1 |= (uint8_t)(1 << PRKB))
2155:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2156:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable() \
2157:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
2158:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRUSART0)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRTIM0)|(1<<PRTIM2)|(1<<PRTWI)); \
2159:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRUSBH)|(1<<PRUSB)|(1<<PRHSSPI)|(1<<PRSCI)|(1<<PRAES)|(1<<PRKB)); \
2160:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
2161:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2162:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable() \
2163:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** do{ \
2164:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRUSART0)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRTIM0)|(1<<PRTIM2)|(1<<PRTWI)); \
2165:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRUSBH)|(1<<PRUSB)|(1<<PRHSSPI)|(1<<PRSCI)|(1<<PRAES)|(1<<PRKB)); \
2166:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }while(0)
2167:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2168:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2169:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATtiny4__) \
2170:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny5__) \
2171:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny9__) \
2172:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny10__) \
2173:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny13A__) \
2174:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2175:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()   (PRR &= (uint8_t)~(1 << PRADC))
2176:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()  (PRR |= (uint8_t)(1 << PRADC))
2177:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2178:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2179:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2180:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2181:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)))
2182:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)))
2183:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2184:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2185:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATtiny20__) \
2186:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny40__)
2187:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2188:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_enable()   (PRR &= (uint8_t)~(1 << PRADC))
2189:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_adc_disable()  (PRR |= (uint8_t)(1 << PRADC))
2190:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2191:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2192:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2193:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2194:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2195:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2196:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2197:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_enable()   (PRR &= (uint8_t)~(1 << PRSPI))
2198:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_spi_disable()  (PRR |= (uint8_t)(1 << PRSPI))
2199:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2200:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_enable()   (PRR &= (uint8_t)~(1 << PRTWI))
2201:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_twi_disable()  (PRR |= (uint8_t)(1 << PRTWI))
2202:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2203:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRSPI)|(1
2204:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRSPI)|(1<
2205:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2206:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #endif
2207:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2208:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2209:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #if defined(__AVR_AT90CAN32__) \
2210:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90CAN64__) \
2211:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90CAN128__) \
2212:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90PWM1__) \
2213:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90PWM2__) \
2214:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90PWM2B__) \
2215:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90PWM3__) \
2216:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90PWM3B__) \
2217:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90PWM81__) \
2218:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90PWM161__) \
2219:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90PWM216__) \
2220:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90PWM316__) \
2221:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90SCR100__) \
2222:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90USB646__) \
2223:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90USB647__) \
2224:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90USB82__) \
2225:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90USB1286__) \
2226:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90USB1287__) \
2227:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_AT90USB162__) \
2228:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATA5505__) \
2229:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATA5272__) \
2230:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega1280__) \
2231:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega1281__) \
2232:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega1284__) \
2233:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega128RFA1__) \
2234:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega1284RFR2__) \
2235:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega128RFR2__) \
2236:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega1284P__) \
2237:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega162__) \
2238:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega164A__) \
2239:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega164P__) \
2240:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega164PA__) \
2241:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega165__) \
2242:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega165A__) \
2243:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega165P__) \
2244:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega165PA__) \
2245:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega168__) \
2246:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega168P__) \
2247:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega168PA__) \
2248:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega169__) \
2249:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega169A__) \
2250:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega169P__) \
2251:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega169PA__) \
2252:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega16U4__) \
2253:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega2560__) \
2254:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega2561__) \
2255:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega2564RFR2__) \
2256:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega256RFR2__) \
2257:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega324A__) \
2258:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega324P__) \
2259:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega325__) \
2260:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega325A__) \
2261:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega325PA__) \
2262:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega3250__) \
2263:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega3250A__) \
2264:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega3250PA__) \
2265:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega328__) \
2266:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega328P__) \
2267:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega329__) \
2268:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega329A__) \
2269:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega329P__) \
2270:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega329PA__) \
2271:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega3290__) \
2272:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega3290A__) \
2273:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega3290PA__) \
2274:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega32C1__) \
2275:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega32M1__) \
2276:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega32U2__) \
2277:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega32U4__) \
2278:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega32U6__) \
2279:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega48__) \
2280:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega48A__) \
2281:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega48PA__) \
2282:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega48P__) \
2283:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega640__) \
2284:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega649P__) \
2285:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega644__) \
2286:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega644A__) \
2287:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega644P__) \
2288:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega644PA__) \
2289:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega645__) \
2290:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega645A__) \
2291:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega645P__) \
2292:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega6450__) \
2293:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega6450A__) \
2294:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega6450P__) \
2295:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega649__) \
2296:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega649A__) \
2297:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega6490__) \
2298:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega6490A__) \
2299:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega6490P__) \
2300:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega644RFR2__) \
2301:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega64RFR2__) \
2302:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega88__) \
2303:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega88P__) \
2304:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega8U2__) \
2305:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega16U2__) \
2306:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega32U2__) \
2307:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny48__) \
2308:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny167__) \
2309:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__DOXYGEN__)
2310:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2311:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2312:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** /** \addtogroup avr_power
2313:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2314:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** Some of the newer AVRs contain a System Clock Prescale Register (CLKPR) that
2315:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** allows you to decrease the system clock frequency and the power consumption
2316:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** when the need for processing power is low.
2317:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** On some earlier AVRs (ATmega103, ATmega64, ATmega128), similar
2318:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** functionality can be achieved through the XTAL Divide Control Register.
2319:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** Below are two macros and an enumerated type that can be used to
2320:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** interface to the Clock Prescale Register or
2321:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** XTAL Divide Control Register.
2322:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2323:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** \note Not all AVR devices have a clock prescaler. On those devices
2324:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** without a Clock Prescale Register or XTAL Divide Control Register, these
2325:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** macros are not available.
2326:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** */
2327:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2328:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2329:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** /** \addtogroup avr_power
2330:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** \code 
2331:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** typedef enum
2332:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** {
2333:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_1 = 0,
2334:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_2 = 1,
2335:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_4 = 2,
2336:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_8 = 3,
2337:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_16 = 4,
2338:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_32 = 5,
2339:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_64 = 6,
2340:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_128 = 7,
2341:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_256 = 8,
2342:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_1_rc = 15, // ATmega128RFA1 only
2343:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** } clock_div_t;
2344:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** \endcode
2345:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** Clock prescaler setting enumerations for device using
2346:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** System Clock Prescale Register.
2347:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2348:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** \code
2349:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** typedef enum
2350:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** {
2351:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_1 = 1,
2352:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_2 = 2,
2353:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_4 = 4,
2354:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_8 = 8,
2355:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_16 = 16,
2356:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_32 = 32,
2357:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_64 = 64,
2358:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_128 = 128
2359:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** } clock_div_t;
2360:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** \endcode
2361:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** Clock prescaler setting enumerations for device using
2362:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** XTAL Divide Control Register.
2363:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2364:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** */
2365:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** typedef enum
2366:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** {
2367:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_1 = 0,
2368:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_2 = 1,
2369:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_4 = 2,
2370:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_8 = 3,
2371:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_16 = 4,
2372:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_32 = 5,
2373:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_64 = 6,
2374:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_128 = 7,
2375:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_256 = 8
2376:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #if defined(__AVR_ATmega128RFA1__) \
2377:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega2564RFR2__) \
2378:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega1284RFR2__) \
2379:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega644RFR2__) \
2380:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega256RFR2__) \
2381:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega128RFR2__) \
2382:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega64RFR2__)
2383:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     , clock_div_1_rc = 15
2384:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #endif
2385:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** } clock_div_t;
2386:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2387:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2388:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** static __inline__ void clock_prescale_set(clock_div_t) __attribute__((__always_inline__));
2389:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2390:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** /** \addtogroup avr_power
2391:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** \code clock_prescale_set(x) \endcode
2392:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2393:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** Set the clock prescaler register select bits, selecting a system clock
2394:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** division setting. This function is inlined, even if compiler
2395:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** optimizations are disabled.
2396:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2397:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** The type of \c x is \c clock_div_t.
2398:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2399:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** \note For device with XTAL Divide Control Register (XDIV), \c x can actually range
2400:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** from 1 to 129. Thus, one does not need to use \c clock_div_t type as argument.
2401:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** */
2402:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** void clock_prescale_set(clock_div_t __x)
2403:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** {
2404:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     uint8_t __tmp = _BV(CLKPCE);
2405:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     __asm__ __volatile__ (
2406:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "in __tmp_reg__,__SREG__" "\n\t"
2407:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "cli" "\n\t"
2408:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "sts %1, %0" "\n\t"
2409:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "sts %1, %2" "\n\t"
2410:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "out __SREG__, __tmp_reg__"
2411:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         : /* no outputs */
2412:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         : "d" (__tmp),
2413:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****           "M" (_SFR_MEM_ADDR(CLKPR)),
2414:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****           "d" (__x)
2415:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         : "r0");
2416:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }
2417:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2418:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** /** \addtogroup avr_power
2419:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** \code clock_prescale_get() \endcode
2420:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** Gets and returns the clock prescaler register setting. The return type is \c clock_div_t.
2421:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2422:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** \note For device with XTAL Divide Control Register (XDIV), return can actually
2423:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** range from 1 to 129. Care should be taken has the return value could differ from the
2424:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** typedef enum clock_div_t. This should only happen if clock_prescale_set was previously
2425:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** called with a value other than those defined by \c clock_div_t.
2426:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** */
2427:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define clock_prescale_get()  (clock_div_t)(CLKPR & (uint8_t)((1<<CLKPS0)|(1<<CLKPS1)|(1<<CLKPS2)|(
2428:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2429:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATmega16HVB__) \
2430:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega16HVBREVB__) \
2431:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega32HVB__) \
2432:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATmega32HVBREVB__)
2433:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2434:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** typedef enum
2435:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** {
2436:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_1 = 0,
2437:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_2 = 1,
2438:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_4 = 2,
2439:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_8 = 3
2440:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** } clock_div_t;
2441:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2442:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** static __inline__ void clock_prescale_set(clock_div_t) __attribute__((__always_inline__));
2443:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2444:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** void clock_prescale_set(clock_div_t __x)
2445:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** {
2446:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     uint8_t __tmp = _BV(CLKPCE);
2447:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     __asm__ __volatile__ (
2448:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "in __tmp_reg__,__SREG__" "\n\t"
2449:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "cli" "\n\t"
2450:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "sts %1, %0" "\n\t"
2451:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "sts %1, %2" "\n\t"
2452:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "out __SREG__, __tmp_reg__"
2453:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         : /* no outputs */
2454:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         : "d" (__tmp),
2455:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****           "M" (_SFR_MEM_ADDR(CLKPR)),
2456:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****           "d" (__x)
2457:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         : "r0");
2458:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }
2459:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2460:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define clock_prescale_get()  (clock_div_t)(CLKPR & (uint8_t)((1<<CLKPS0)|(1<<CLKPS1)))
2461:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2462:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATA5790__) \
2463:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined (__AVR_ATA5795__)
2464:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2465:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** typedef enum
2466:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** {
2467:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_1 = 0,
2468:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_2 = 1,
2469:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_4 = 2,
2470:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_8 = 3,
2471:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_16 = 4,
2472:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_32 = 5,
2473:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_64 = 6,
2474:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_128 = 7,
2475:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** } clock_div_t;
2476:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2477:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** static __inline__ void system_clock_prescale_set(clock_div_t) __attribute__((__always_inline__));
2478:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2479:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** void system_clock_prescale_set(clock_div_t __x)
2480:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** {
2481:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     uint8_t __tmp = _BV(CLKPCE);
2482:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     __asm__ __volatile__ (
2483:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "in __tmp_reg__,__SREG__" "\n\t"
2484:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "cli" "\n\t"
2485:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "out %1, %0" "\n\t"
2486:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "out %1, %2" "\n\t"
2487:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "out __SREG__, __tmp_reg__"
2488:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         : /* no outputs */
2489:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         : "d" (__tmp),
2490:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****           "I" (_SFR_IO_ADDR(CLKPR)),
2491:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****           "d" (__x)
2492:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         : "r0");
2493:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }
2494:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2495:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define system_clock_prescale_get()  (clock_div_t)(CLKPR & (uint8_t)((1<<CLKPS0)|(1<<CLKPS1)|(1<<CL
2496:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2497:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** typedef enum
2498:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** {
2499:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     timer_clock_div_reset = 0,
2500:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     timer_clock_div_1 = 1,
2501:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     timer_clock_div_2 = 2,
2502:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     timer_clock_div_4 = 3,
2503:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     timer_clock_div_8 = 4,
2504:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     timer_clock_div_16 = 5,
2505:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     timer_clock_div_32 = 6,
2506:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     timer_clock_div_64 = 7
2507:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** } timer_clock_div_t;
2508:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2509:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** static __inline__ void timer_clock_prescale_set(timer_clock_div_t) __attribute__((__always_inline__
2510:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2511:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** void timer_clock_prescale_set(timer_clock_div_t __x)
2512:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** {
2513:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     uint8_t __t;
2514:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     __asm__ __volatile__ (
2515:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "in __tmp_reg__,__SREG__" "\n\t"
2516:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "cli" "\n\t"
2517:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "in %[temp],%[clkpr]" "\n\t"
2518:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "out %[clkpr],%[enable]" "\n\t"
2519:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "andi %[temp],%[not_CLTPS]" "\n\t"
2520:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "or %[temp], %[set_value]" "\n\t"
2521:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "out %[clkpr],%[temp]" "\n\t"
2522:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "sei" "\n\t"
2523:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "out __SREG__,__tmp_reg__" "\n\t"
2524:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         : /* no outputs */
2525:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         : [temp] "r" (__t),
2526:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****           [clkpr] "I" (_SFR_IO_ADDR(CLKPR)),
2527:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****           [enable] "r" (_BV(CLKPCE)),
2528:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****           [not_CLTPS] "M" (0xFF & (~ ((1 << CLTPS2) | (1 << CLTPS1) | (1 << CLTPS0)))),
2529:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****           [set_value] "r" ((__x & 7) << 3)
2530:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         : "r0");
2531:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }
2532:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2533:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define timer_clock_prescale_get()  (timer_clock_div_t)(CLKPR & (uint8_t)((1<<CLTPS0)|(1<<CLTPS1)|(
2534:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2535:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATA6285__) \
2536:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATA6286__)
2537:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2538:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** typedef enum
2539:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** {
2540:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_1 = 0,
2541:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_2 = 1,
2542:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_4 = 2,
2543:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_8 = 3,
2544:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_16 = 4,
2545:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_32 = 5,
2546:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_64 = 6,
2547:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_128 = 7
2548:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** } clock_div_t;
2549:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2550:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** static __inline__ void system_clock_prescale_set(clock_div_t) __attribute__((__always_inline__));
2551:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2552:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** void system_clock_prescale_set(clock_div_t __x)
2553:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** {
2554:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     uint8_t __t;
2555:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     __asm__ __volatile__ (
2556:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "in __tmp_reg__,__SREG__" "\n\t"
2557:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "cli" "\n\t"
2558:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "in %[temp],%[clpr]" "\n\t"
2559:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "out %[clpr],%[enable]" "\n\t"
2560:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "andi %[temp],%[not_CLKPS]" "\n\t"
2561:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "or %[temp], %[set_value]" "\n\t"
2562:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "out %[clpr],%[temp]" "\n\t"
2563:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "sei" "\n\t"
2564:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "out __SREG__,__tmp_reg__" "\n\t"
2565:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         : /* no outputs */
2566:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         : [temp] "r" (__t),
2567:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****           [clpr] "I" (_SFR_IO_ADDR(CLKPR)),
2568:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****           [enable] "r" _BV(CLPCE),
2569:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****           [not_CLKPS] "M" (0xFF & (~ ((1 << CLKPS2) | (1 << CLKPS1) | (1 << CLKPS0)))),
2570:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****           [set_value] "r" (__x & 7)
2571:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         : "r0");
2572:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }
2573:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2574:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define system_clock_prescale_get()  (clock_div_t)(CLKPR & (uint8_t)((1<<CLKPS0)|(1<<CLKPS1)|(1<<CL
2575:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2576:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** typedef enum
2577:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** {
2578:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     timer_clock_div_reset = 0,
2579:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     timer_clock_div_1 = 1,
2580:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     timer_clock_div_2 = 2,
2581:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     timer_clock_div_4 = 3,
2582:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     timer_clock_div_8 = 4,
2583:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     timer_clock_div_16 = 5,
2584:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     timer_clock_div_32 = 6,
2585:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     timer_clock_div_64 = 7
2586:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** } timer_clock_div_t;
2587:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2588:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** static __inline__ void timer_clock_prescale_set(timer_clock_div_t) __attribute__((__always_inline__
2589:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2590:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** void timer_clock_prescale_set(timer_clock_div_t __x)
2591:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** {
2592:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     uint8_t __t;
2593:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     __asm__ __volatile__ (
2594:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "in __tmp_reg__,__SREG__" "\n\t"
2595:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "cli" "\n\t"
2596:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "in %[temp],%[clpr]" "\n\t"
2597:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "out %[clpr],%[enable]" "\n\t"
2598:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "andi %[temp],%[not_CLTPS]" "\n\t"
2599:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "or %[temp], %[set_value]" "\n\t"
2600:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "out %[clpr],%[temp]" "\n\t"
2601:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "sei" "\n\t"
2602:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         "out __SREG__,__tmp_reg__" "\n\t"
2603:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         : /* no outputs */
2604:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         : [temp] "r" (__t),
2605:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****           [clpr] "I" (_SFR_IO_ADDR(CLKPR)),
2606:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****           [enable] "r" (_BV(CLPCE)),	  
2607:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****           [not_CLTPS] "M" (0xFF & (~ ((1 << CLTPS2) | (1 << CLTPS1) | (1 << CLTPS0)))),
2608:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****           [set_value] "r" ((__x & 7) << 3)
2609:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****         : "r0");
2610:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** }
2611:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2612:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #define timer_clock_prescale_get()  (timer_clock_div_t)(CLKPR & (uint8_t)((1<<CLTPS0)|(1<<CLTPS1)|(
2613:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2614:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** #elif defined(__AVR_ATtiny24__) \
2615:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny24A__) \
2616:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny44__) \
2617:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny44A__) \
2618:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny84__) \
2619:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny84A__) \
2620:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny25__) \
2621:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny45__) \
2622:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny85__) \
2623:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny261A__) \
2624:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny261__) \
2625:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny461__) \
2626:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny461A__) \
2627:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny861__) \
2628:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny861A__) \
2629:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny2313__) \
2630:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny2313A__) \
2631:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny4313__) \
2632:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny13__) \
2633:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny13A__) \
2634:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** || defined(__AVR_ATtiny43U__) \
2635:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2636:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** typedef enum
2637:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** {
2638:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_1 = 0,
2639:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_2 = 1,
2640:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_4 = 2,
2641:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_8 = 3,
2642:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_16 = 4,
2643:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_32 = 5,
2644:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_64 = 6,
2645:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_128 = 7,
2646:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     clock_div_256 = 8
2647:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** } clock_div_t;
2648:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2649:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** static __inline__ void clock_prescale_set(clock_div_t) __attribute__((__always_inline__));
2650:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** 
2651:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** void clock_prescale_set(clock_div_t __x)
2652:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h **** {
2653:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     uint8_t __tmp = _BV(CLKPCE);
2654:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h ****     __asm__ __volatile__ (
 152               	.LM6:
 153 0010 90E0      		ldi r25,0
 154 0012 80E8      		ldi r24,lo8(-128)
 155               	/* #APP */
 156               	 ;  2654 "/usr/local/Cellar/avr-gcc/4.8.3/avr/include/avr/power.h" 1
 157 0014 0FB6      		in __tmp_reg__,__SREG__
 158 0016 F894      		cli
 159 0018 86BD      		out 38, r24
 160 001a 96BD      		out 38, r25
 161 001c 0FBE      		out __SREG__, __tmp_reg__
 162               	 ;  0 "" 2
 163               	/* #NOAPP */
 164               	.LBE13:
 165               	.LBE12:
 167               	.Ltext2:
  44:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     clock_prescale_set(0);  // default is /8.. (0) = /1 , (1)= /2, (8)=/256
  45:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     
  46:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****         ICR1 = 80;  //pwm period  (125kHz)
 169               	.LM7:
 170 001e 80E5      		ldi r24,lo8(80)
 171 0020 90E0      		ldi r25,0
 172 0022 95BD      		out 0x24+1,r25
 173 0024 84BD      		out 0x24,r24
  47:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****         OCR1A = 8;  //~10%   (pwm duty cycle)
 175               	.LM8:
 176 0026 88E0      		ldi r24,lo8(8)
 177 0028 90E0      		ldi r25,0
 178 002a 9BBD      		out 0x2a+1,r25
 179 002c 8ABD      		out 0x2a,r24
  48:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****         OCR1B = 0;  //different counter
 181               	.LM9:
 182 002e 19BC      		out 0x28+1,__zero_reg__
 183 0030 18BC      		out 0x28,__zero_reg__
 184 0032 0895      		ret
 186               	.Lscope1:
 189               	.global	pwm
 191               	pwm:
  49:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     
  50:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     
  51:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     
  52:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** 
  53:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** }
  54:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** 
  55:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** void pwm(int input){
 193               	.LM10:
 194               	.LFBB2:
 195               	/* prologue: function */
 196               	/* frame size = 0 */
 197               	/* stack size = 0 */
 198               	.L__stack_usage = 0
  56:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** 
  57:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     if (input){
 200               	.LM11:
 201 0034 892B      		or r24,r25
 202 0036 01F0      		breq .L3
  58:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****         TCCR1A = _BV(COM1A1) | _BV(WGM11);     //COM1A1-> set OC1A to output, WGM11+WGM12+WGM13 =se
 204               	.LM12:
 205 0038 82E8      		ldi r24,lo8(-126)
 206 003a 8FBD      		out 0x2f,r24
  59:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****         TCCR1B = _BV(CS10) | _BV(WGM12) | _BV(WGM13); //CS10 ->no clk prescaling=>fastest
 208               	.LM13:
 209 003c 89E1      		ldi r24,lo8(25)
 210 003e 00C0      		rjmp .L5
 211               	.L3:
  60:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** 
  61:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     }
  62:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     else{
  63:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****             TCCR1A = ~_BV(COM1A1) | ~_BV(WGM11);     //set to default values
 213               	.LM14:
 214 0040 8FEF      		ldi r24,lo8(-1)
 215 0042 8FBD      		out 0x2f,r24
 216               	.L5:
  64:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****             TCCR1B = ~_BV(CS10) | ~_BV(WGM12) | _BV(WGM13); //set to default values
 218               	.LM15:
 219 0044 8EBD      		out 0x2e,r24
 220 0046 0895      		ret
 222               	.Lscope2:
 223               		.section	.text.startup,"ax",@progbits
 225               	.global	main
 227               	main:
  65:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     }
  66:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** }
  67:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** 
  68:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** 
  69:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** 
  70:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** int main(void) {
 229               	.LM16:
 230               	.LFBB3:
 231               	/* prologue: function */
 232               	/* frame size = 0 */
 233               	/* stack size = 0 */
 234               	.L__stack_usage = 0
  71:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     
  72:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** 	initIO();
 236               	.LM17:
 237 0000 00D0      		rcall initIO
 238               	.LBB26:
 239               	.LBB27:
  58:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****         TCCR1B = _BV(CS10) | _BV(WGM12) | _BV(WGM13); //CS10 ->no clk prescaling=>fastest
 241               	.LM18:
 242 0002 22E8      		ldi r18,lo8(-126)
  59:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** 
 244               	.LM19:
 245 0004 99E1      		ldi r25,lo8(25)
 246               	.LBE27:
 247               	.LBE26:
 248               	.LBB29:
 249               	.LBB30:
  63:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****             TCCR1B = ~_BV(CS10) | ~_BV(WGM12) | _BV(WGM13); //set to default values
 251               	.LM20:
 252 0006 8FEF      		ldi r24,lo8(-1)
 253               	.L8:
 254               	.LBE30:
 255               	.LBE29:
  73:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     
  74:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** 	while (1) {
  75:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****         
  76:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****         if (SWITCH) {
 257               	.LM21:
 258 0008 C99B      		sbis 0x19,1
 259 000a 00C0      		rjmp .L9
 260               	.LBB32:
 261               	.LBB31:
  63:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****             TCCR1B = ~_BV(CS10) | ~_BV(WGM12) | _BV(WGM13); //set to default values
 263               	.LM22:
 264 000c 8FBD      		out 0x2f,r24
  64:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****     }
 266               	.LM23:
 267 000e 8EBD      		out 0x2e,r24
 268               	.LBE31:
 269               	.LBE32:
  77:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****             pwm(0);
  78:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****             LEDG = 0;
 271               	.LM24:
 272 0010 DB98      		cbi 0x1b,3
 273               	.LBB33:
 274               	.LBB34:
 276               	.Ltext3:
   1:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** /* $Id: delay.h.in 2385 2013-05-03 13:14:20Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** #endif
  41:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
  42:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** #include <math.h>
  45:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
  46:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** /** \file */
  47:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     \code
  49:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     \endcode
  53:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
  54:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     used.
  58:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
  59:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
  68:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
  77:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
  81:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** */
  82:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** #endif
  87:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
  88:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** #endif
  93:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
  94:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** #endif
  97:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
  98:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** #endif
 103:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
 104:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** /**
 105:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
 107:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
 109:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
 112:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
 114:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
 120:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
 125:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
 132:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
 140:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****  */
 141:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** void
 142:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** {
 144:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 	double __tmp ; 
 145:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 146:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 147:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h ****   __STDC_HOSTED__
 148:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 149:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 150:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 151:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 153:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 154:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
 155:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 156:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 157:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
 158:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 	#else
 159:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 		//round up by default
 160:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 161:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 	#endif
 162:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 
 163:/usr/local/Cellar/avr-gcc/4.8.3/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 278               	.LM25:
 279 0012 3FEF      		ldi r19,lo8(2399999)
 280 0014 4EE9      		ldi r20,hi8(2399999)
 281 0016 54E2      		ldi r21,hlo8(2399999)
 282 0018 3150      		1: subi r19,1
 283 001a 4040      		sbci r20,0
 284 001c 5040      		sbci r21,0
 285 001e 01F4      		brne 1b
 286 0020 00C0      		rjmp .
 287 0022 0000      		nop
 288               	.LBE34:
 289               	.LBE33:
 291               	.Ltext4:
  79:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****             _delay_ms(750);
  80:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****             LEDG = 1;
 293               	.LM26:
 294 0024 DB9A      		sbi 0x1b,3
 295               	.LBB35:
 296               	.LBB36:
 298               	.Ltext5:
 300               	.LM27:
 301 0026 3FE7      		ldi r19,lo8(79999)
 302 0028 48E3      		ldi r20,hi8(79999)
 303 002a 51E0      		ldi r21,hlo8(79999)
 304 002c 3150      		1: subi r19,1
 305 002e 4040      		sbci r20,0
 306 0030 5040      		sbci r21,0
 307 0032 01F4      		brne 1b
 308 0034 00C0      		rjmp .L11
 309               	.L9:
 310               	.LBE36:
 311               	.LBE35:
 312               	.LBB37:
 313               	.LBB28:
 315               	.Ltext6:
  58:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****         TCCR1B = _BV(CS10) | _BV(WGM12) | _BV(WGM13); //CS10 ->no clk prescaling=>fastest
 317               	.LM28:
 318 0036 2FBD      		out 0x2f,r18
  59:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c **** 
 320               	.LM29:
 321 0038 9EBD      		out 0x2e,r25
 322               	.LBE28:
 323               	.LBE37:
  81:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****             _delay_ms(25);
  82:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****         }
  83:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****         
  84:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****         else {
  85:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****             pwm(1);
  86:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****             LEDG = 0;
 325               	.LM30:
 326 003a DB98      		cbi 0x1b,3
  87:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****             LEDR = 1;
 328               	.LM31:
 329 003c DA9A      		sbi 0x1b,2
 330               	.LBB38:
 331               	.LBB39:
 333               	.Ltext7:
 335               	.LM32:
 336 003e 3FEF      		ldi r19,lo8(319999)
 337 0040 41EE      		ldi r20,hi8(319999)
 338 0042 54E0      		ldi r21,hlo8(319999)
 339 0044 3150      		1: subi r19,1
 340 0046 4040      		sbci r20,0
 341 0048 5040      		sbci r21,0
 342 004a 01F4      		brne 1b
 343 004c 00C0      		rjmp .
 344 004e 0000      		nop
 345               	.LBE39:
 346               	.LBE38:
 348               	.Ltext8:
  88:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****             _delay_ms(100);
  89:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****             LEDG = 1;
 350               	.LM33:
 351 0050 DB9A      		sbi 0x1b,3
  90:/Users/tgil/Documents/Git/ece411/7DEC/7DEC/main.c ****             LEDR = 0;
 353               	.LM34:
 354 0052 DA98      		cbi 0x1b,2
 355               	.LBB40:
 356               	.LBB41:
 358               	.Ltext9:
 360               	.LM35:
 361 0054 3FEF      		ldi r19,lo8(319999)
 362 0056 41EE      		ldi r20,hi8(319999)
 363 0058 54E0      		ldi r21,hlo8(319999)
 364 005a 3150      		1: subi r19,1
 365 005c 4040      		sbci r20,0
 366 005e 5040      		sbci r21,0
 367 0060 01F4      		brne 1b
 368               	.L11:
 369 0062 00C0      		rjmp .
 370 0064 0000      		nop
 371 0066 00C0      		rjmp .L8
 372               	.LBE41:
 373               	.LBE40:
 375               	.Lscope3:
 376               		.text
 378               	.Letext0:
 379               		.ident	"GCC: (GNU) 4.8.3"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/zc/w4ylftqx7y1gl_1pxtm0q8gc0000gn/T//ccJBZtmO.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/zc/w4ylftqx7y1gl_1pxtm0q8gc0000gn/T//ccJBZtmO.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/zc/w4ylftqx7y1gl_1pxtm0q8gc0000gn/T//ccJBZtmO.s:4      *ABS*:000000000000003f __SREG__
/var/folders/zc/w4ylftqx7y1gl_1pxtm0q8gc0000gn/T//ccJBZtmO.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/zc/w4ylftqx7y1gl_1pxtm0q8gc0000gn/T//ccJBZtmO.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/zc/w4ylftqx7y1gl_1pxtm0q8gc0000gn/T//ccJBZtmO.s:121    .text:0000000000000000 initIO
/var/folders/zc/w4ylftqx7y1gl_1pxtm0q8gc0000gn/T//ccJBZtmO.s:191    .text:0000000000000034 pwm
/var/folders/zc/w4ylftqx7y1gl_1pxtm0q8gc0000gn/T//ccJBZtmO.s:227    .text.startup:0000000000000000 main

NO UNDEFINED SYMBOLS
